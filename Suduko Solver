public class SudukoSolver
{
    static void printSuduko(int suduko[][])
    {
        for (int i=0;i< suduko.length;i++) {
            for (int j = 0; j < suduko.length; j++)
                System.out.print(suduko[i][j] + "  ");
            System.out.println();
        }
    }

    static boolean isSafe(int suduko[][],int row,int col, int num)
    {
        for (int x=0;x<=8;x++)
            if (suduko[row][x]==num)
                return false;

        for (int x=0;x<=8;x++)
            if (suduko[x][col]==num)
                return false;

        int startRow=row-row%3;
        int startCol=col-col%3;

        for (int i=0;i<3;i++)
            for (int j=0;j<3;j++)
                if (suduko[i+startRow][j+startCol]==num)
                    return false;
        return true;
    }

    static boolean solveSuduko(int suduko[][],int row, int col)
    {
        if (row==suduko.length-1 && col== suduko.length) return true;

        if (col== suduko.length)
        {
            row++;
            col=0;
        }
        if (suduko[row][col]!=0) return solveSuduko(suduko,row,col+1);

        for (int num=1;num<10;num++)
        {
            if (isSafe(suduko,row,col,num))
            {
                suduko[row][col]=num;
                if (solveSuduko(suduko,row,col+1))
                    return true;
            }
            suduko[row][col]=0;
        }
        return false;
    }

    public static void main(String[] args) {
        int suduko[][]={{3,0,6,5,0,8,4,0,0},
                        {5,2,0,0,0,0,0,0,0},
                        {0,8,7,0,0,0,0,3,1},
                        {0,0,3,0,1,0,0,8,0},
                        {9,0,0,8,6,3,0,0,5},
                        {0,5,0,0,9,0,6,0,0},
                        {1,3,0,0,0,0,2,5,0},
                        {0,0,0,0,0,0,0,7,4},
                        {0,0,5,2,0,6,3,0,0}};

        if(solveSuduko(suduko,0,0))
            printSuduko(suduko);
        else
            System.out.println("No solution exist");
    }
}
