public class nQueen
{
    void printBoard(int board[][])
    {
        for (int i=0;i<board.length;i++) {
            for (int j = 0; j < board.length; j++)
                System.out.print(board[i][j] + " ");
            System.out.println();
        }
    }

    boolean isSafe(int board[][],int row, int col)
    {
        int i,j;
        //Check this row on left side
        for (i=0;i<col;i++)
            if (board[row][i]==1)
                return false;
        //Check upper diagonals on left side
        for (i=row,j=col;i>=0 && j>=0;i--,j--)
            if (board[i][j]==1)
                return false;
        //Check lower diagonal on left side
        for (i=row,j=col;j>=0 && i<board.length;i++,j--)
            if (board[i][j]==1)
                return false;
        //Check upper col
        for (i=row;i>=0;i--)
            if (board[i][col]==1)
                return false;
        //Check lower col
        for (i=row;i<board.length;i++)
            if (board[i][col]==1)
                return false;

        return true;
    }

    boolean check(int board[][],int row)
    {
        if (row==board.length) return true;
        for (int col=0;col<board.length;col++)
        {
            if (isSafe(board,row,col))
            {
                board[row][col]=1;
                if (check(board,row+1))
                    return true;
                board[row][col]=0;      //Backtracking
            }
        }
        return false;

    }

    boolean solveNQ()
    {
        int board[][]={ {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0}};
        if (check(board,0)== false) {
            System.out.println("SOlution doesn't exist");
            return false;
        }
        printBoard(board);
        return true;

    }

    public static void main(String[] args) {
        nQueen Queen=new nQueen();
        Queen.solveNQ();
    }
}
